diff -Naur glibc-2.32/math/math.h glibc-2.32-sfsetjmp/math/math.h
--- glibc-2.32/math/math.h	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/math/math.h	2022-03-17 18:03:15.167703000 +0300
@@ -308,6 +308,9 @@
 /* Include the file of declarations again, this time using `float'
    instead of `double' and appending f to each function name.  */
 
+# ifndef _Mfloat_
+#  define _Mfloat_		float
+# endif
 # define _Mdouble_		float
 # define __MATH_PRECNAME(name,r) name##f##r
 # define __MATH_DECLARING_DOUBLE  0
@@ -425,7 +428,7 @@
 #endif /* __HAVE_DISTINCT_FLOAT16 || (__HAVE_FLOAT16 && !_LIBC).  */
 
 #if __HAVE_DISTINCT_FLOAT32 || (__HAVE_FLOAT32 && !defined _LIBC)
-# define _Mdouble_		_Float32
+# define _Mdouble_		_Mfloat_
 # define __MATH_PRECNAME(name,r) name##f32##r
 # define __MATH_DECLARING_DOUBLE  0
 # define __MATH_DECLARING_FLOATN  1
@@ -612,7 +615,7 @@
 
 # if __HAVE_FLOAT16 && __HAVE_FLOAT32
 #  define _Mret_ _Float16
-#  define _Marg_ _Float32
+#  define _Marg_ _Mfloat_
 #  define __MATHCALL_NAME(name) f16 ## name ## f32
 #  include <bits/mathcalls-narrow.h>
 #  undef _Mret_
@@ -671,7 +674,7 @@
 # endif
 
 # if __HAVE_FLOAT32 && __HAVE_FLOAT32X
-#  define _Mret_ _Float32
+#  define _Mret_ _Mfloat_
 #  define _Marg_ _Float32x
 #  define __MATHCALL_NAME(name) f32 ## name ## f32x
 #  include <bits/mathcalls-narrow.h>
@@ -681,7 +684,7 @@
 # endif
 
 # if __HAVE_FLOAT32 && __HAVE_FLOAT64
-#  define _Mret_ _Float32
+#  define _Mret_ _Mfloat_
 #  define _Marg_ _Float64
 #  define __MATHCALL_NAME(name) f32 ## name ## f64
 #  include <bits/mathcalls-narrow.h>
@@ -691,7 +694,7 @@
 # endif
 
 # if __HAVE_FLOAT32 && __HAVE_FLOAT64X
-#  define _Mret_ _Float32
+#  define _Mret_ _Mfloat_
 #  define _Marg_ _Float64x
 #  define __MATHCALL_NAME(name) f32 ## name ## f64x
 #  include <bits/mathcalls-narrow.h>
@@ -701,7 +704,7 @@
 # endif
 
 # if __HAVE_FLOAT32 && __HAVE_FLOAT128
-#  define _Mret_ _Float32
+#  define _Mret_ _Mfloat_
 #  define _Marg_ _Float128
 #  define __MATHCALL_NAME(name) f32 ## name ## f128
 #  include <bits/mathcalls-narrow.h>
@@ -711,7 +714,7 @@
 # endif
 
 # if __HAVE_FLOAT32 && __HAVE_FLOAT128X
-#  define _Mret_ _Float32
+#  define _Mret_ _Mfloat_
 #  define _Marg_ _Float128x
 #  define __MATHCALL_NAME(name) f32 ## name ## f128x
 #  include <bits/mathcalls-narrow.h>
@@ -861,7 +864,7 @@
 #elif __HAVE_DISTINCT_FLOAT128
 # if __HAVE_GENERIC_SELECTION
 #  if __HAVE_FLOATN_NOT_TYPEDEF && __HAVE_FLOAT32
-#   define __MATH_TG_F32(FUNC, ARGS) _Float32: FUNC ## f ARGS,
+#   define __MATH_TG_F32(FUNC, ARGS) _Mfloat_: FUNC ## f ARGS,
 #  else
 #   define __MATH_TG_F32(FUNC, ARGS)
 #  endif
diff -Naur glibc-2.32/stdlib/stdlib.h glibc-2.32-sfsetjmp/stdlib/stdlib.h
--- glibc-2.32/stdlib/stdlib.h	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/stdlib/stdlib.h	2022-03-17 17:58:28.884262000 +0300
@@ -137,7 +137,7 @@
 #endif
 
 #if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)
-extern _Float32 strtof32 (const char *__restrict __nptr,
+extern float strtof32 (const char *__restrict __nptr,
 			  char **__restrict __endptr)
      __THROW __nonnull ((1));
 #endif
@@ -230,7 +230,7 @@
 
 #if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 extern int strfromf32 (char *__dest, size_t __size, const char * __format,
-		       _Float32 __f)
+		       float __f)
      __THROW __nonnull ((3));
 #endif
 
@@ -313,7 +313,7 @@
 # endif
 
 # if __HAVE_FLOAT32
-extern _Float32 strtof32_l (const char *__restrict __nptr,
+extern float strtof32_l (const char *__restrict __nptr,
 			    char **__restrict __endptr,
 			    locale_t __loc)
      __THROW __nonnull ((1, 3));
diff -Naur glibc-2.32/sysdeps/mips/__longjmp.c glibc-2.32-sfsetjmp/sysdeps/mips/__longjmp.c
--- glibc-2.32/sysdeps/mips/__longjmp.c	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/sysdeps/mips/__longjmp.c	2022-03-09 18:01:02.026234000 +0300
@@ -39,12 +39,19 @@
 
 #ifdef __mips_hard_float
   /* Pull back the floating point callee-saved registers.  */
-  asm volatile ("l.d $f20, %0" : : "m" (env[0].__fpregs[0]));
-  asm volatile ("l.d $f22, %0" : : "m" (env[0].__fpregs[1]));
-  asm volatile ("l.d $f24, %0" : : "m" (env[0].__fpregs[2]));
-  asm volatile ("l.d $f26, %0" : : "m" (env[0].__fpregs[3]));
-  asm volatile ("l.d $f28, %0" : : "m" (env[0].__fpregs[4]));
-  asm volatile ("l.d $f30, %0" : : "m" (env[0].__fpregs[5]));
+# if __mips_fpr == 0 || __mips_fpr == 64
+#  define LDFPR "ldc1 "
+# elif __mips_fpr == 32
+#  define LDFPR "lwc1 "
+# else
+#  define LDFPR "l.d "
+# endif
+  asm volatile (LDFPR "$f20, %0" : : "m" (env[0].__fpregs[0]));
+  asm volatile (LDFPR "$f22, %0" : : "m" (env[0].__fpregs[1]));
+  asm volatile (LDFPR "$f24, %0" : : "m" (env[0].__fpregs[2]));
+  asm volatile (LDFPR "$f26, %0" : : "m" (env[0].__fpregs[3]));
+  asm volatile (LDFPR "$f28, %0" : : "m" (env[0].__fpregs[4]));
+  asm volatile (LDFPR "$f30, %0" : : "m" (env[0].__fpregs[5]));
 #endif
 
   /* Get the GP. */
diff -Naur glibc-2.32/sysdeps/mips/setjmp_aux.c glibc-2.32-sfsetjmp/sysdeps/mips/setjmp_aux.c
--- glibc-2.32/sysdeps/mips/setjmp_aux.c	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/sysdeps/mips/setjmp_aux.c	2022-03-09 18:01:42.275021000 +0300
@@ -33,12 +33,20 @@
 {
 #ifdef __mips_hard_float
   /* Store the floating point callee-saved registers...  */
-  asm volatile ("s.d $f20, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[0]));
-  asm volatile ("s.d $f22, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[1]));
-  asm volatile ("s.d $f24, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[2]));
-  asm volatile ("s.d $f26, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[3]));
-  asm volatile ("s.d $f28, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[4]));
-  asm volatile ("s.d $f30, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[5]));
+# if __mips_fpr == 0 || __mips_fpr == 64
+#  define STFPR "sdc1 "
+# elif __mips_fpr == 32
+#  define STFPR "swc1 "
+# else
+#  define STFPR "s.d "
+# endif
+   /* Store the floating point callee-saved registers...  */
+  asm volatile (STFPR "$f20, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[0]));
+  asm volatile (STFPR "$f22, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[1]));
+  asm volatile (STFPR "$f24, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[2]));
+  asm volatile (STFPR "$f26, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[3]));
+  asm volatile (STFPR "$f28, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[4]));
+  asm volatile (STFPR "$f30, %0" : : "m" (env[0].__jmpbuf[0].__fpregs[5]));
 #endif
 
   /* .. and the PC;  */
diff -Naur glibc-2.32/sysdeps/unix/sysv/linux/mips/getcontext.S glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/getcontext.S
--- glibc-2.32/sysdeps/unix/sysv/linux/mips/getcontext.S	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/getcontext.S	2022-03-09 18:04:30.144131000 +0300
@@ -106,12 +106,19 @@
 	s.d	fs7, (31 * SZREG + MCONTEXT_FPREGS)(a0)
 
 # else  /* _MIPS_SIM != _ABI64 */
-	s.d	fs0, (20 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs1, (22 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs2, (24 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs3, (26 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs4, (28 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs5, (30 * SZREG + MCONTEXT_FPREGS)(a0)
+#  if __mips_fpr == 0 || __mips_fpr == 64
+#   define STFPR sdc1
+#  elif __mips_fpr == 32
+#   define STFPR swc1
+#  else
+#   define STFPR s.d
+#  endif
+	STFPR	fs0, (20 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs1, (22 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs2, (24 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs3, (26 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs4, (28 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs5, (30 * SZREG + MCONTEXT_FPREGS)(a0)
 
 # endif /* _MIPS_SIM != _ABI64 */
 
diff -Naur glibc-2.32/sysdeps/unix/sysv/linux/mips/setcontext.S glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/setcontext.S
--- glibc-2.32/sysdeps/unix/sysv/linux/mips/setcontext.S	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/setcontext.S	2022-03-09 18:02:39.870715000 +0300
@@ -103,12 +103,19 @@
 	l.d	fs7, (31 * SZREG + MCONTEXT_FPREGS)(v0)
 
 # else  /* _MIPS_SIM != _ABI64 */
-	l.d	fs0, (20 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs1, (22 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs2, (24 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs3, (26 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs4, (28 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs5, (30 * SZREG + MCONTEXT_FPREGS)(v0)
+#  if __mips_fpr == 0 || __mips_fpr == 64
+#   define LDFPR ldc1
+#  elif __mips_fpr == 32
+#   define LDFPR lwc1
+#  else
+#   define LDFPR l.d
+#  endif
+	LDFPR	fs0, (20 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs1, (22 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs2, (24 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs3, (26 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs4, (28 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs5, (30 * SZREG + MCONTEXT_FPREGS)(v0)
 
 # endif /* _MIPS_SIM != _ABI64 */
 
diff -Naur glibc-2.32/sysdeps/unix/sysv/linux/mips/swapcontext.S glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/swapcontext.S
--- glibc-2.32/sysdeps/unix/sysv/linux/mips/swapcontext.S	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/sysdeps/unix/sysv/linux/mips/swapcontext.S	2022-03-09 18:03:32.672436000 +0300
@@ -115,12 +115,19 @@
 	s.d	fs7, (31 * SZREG + MCONTEXT_FPREGS)(a0)
 
 # else  /* _MIPS_SIM != _ABI64 */
-	s.d	fs0, (20 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs1, (22 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs2, (24 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs3, (26 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs4, (28 * SZREG + MCONTEXT_FPREGS)(a0)
-	s.d	fs5, (30 * SZREG + MCONTEXT_FPREGS)(a0)
+#  if __mips_fpr == 0 || __mips_fpr == 64
+#   define STFPR sdc1
+#  elif __mips_fpr == 32
+#   define STFPR swc1
+#  else
+#   define STFPR s.d
+#  endif
+	STFPR	fs0, (20 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs1, (22 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs2, (24 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs3, (26 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs4, (28 * SZREG + MCONTEXT_FPREGS)(a0)
+	STFPR	fs5, (30 * SZREG + MCONTEXT_FPREGS)(a0)
 
 # endif /* _MIPS_SIM != _ABI64 */
 
@@ -154,12 +161,20 @@
 	l.d	fs7, (31 * SZREG + MCONTEXT_FPREGS)(v0)
 
 # else  /* _MIPS_SIM != _ABI64 */
-	l.d	fs0, (20 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs1, (22 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs2, (24 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs3, (26 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs4, (28 * SZREG + MCONTEXT_FPREGS)(v0)
-	l.d	fs5, (30 * SZREG + MCONTEXT_FPREGS)(v0)
+#  if __mips_fpr == 0 || __mips_fpr == 64
+#   define LDFPR ldc1
+#  elif __mips_fpr == 32
+#   define LDFPR lwc1
+#  else
+#   define LDFPR l.d
+#  endif
+
+	LDFPR	fs0, (20 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs1, (22 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs2, (24 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs3, (26 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs4, (28 * SZREG + MCONTEXT_FPREGS)(v0)
+	LDFPR	fs5, (30 * SZREG + MCONTEXT_FPREGS)(v0)
 
 # endif /* _MIPS_SIM != _ABI64 */
 
diff -Naur glibc-2.32/wcsmbs/wchar.h glibc-2.32-sfsetjmp/wcsmbs/wchar.h
--- glibc-2.32/wcsmbs/wchar.h	2020-08-05 05:17:00.000000000 +0300
+++ glibc-2.32-sfsetjmp/wcsmbs/wchar.h	2022-03-17 17:59:26.238748000 +0300
@@ -393,7 +393,7 @@
 #endif
 
 #if __HAVE_FLOAT32 && defined __USE_GNU
-extern _Float32 wcstof32 (const wchar_t *__restrict __nptr,
+extern float wcstof32 (const wchar_t *__restrict __nptr,
 			  wchar_t **__restrict __endptr) __THROW;
 #endif
 
@@ -508,7 +508,7 @@
 # endif
 
 # if __HAVE_FLOAT32
-extern _Float32 wcstof32_l (const wchar_t *__restrict __nptr,
+extern float wcstof32_l (const wchar_t *__restrict __nptr,
 			    wchar_t **__restrict __endptr,
 			    locale_t __loc) __THROW;
 # endif
